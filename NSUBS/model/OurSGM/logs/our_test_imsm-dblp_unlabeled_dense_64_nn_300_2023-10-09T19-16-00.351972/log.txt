Critical! Fix random seed for torch and numpy
Take 100 out of 200 query graphs
Loaded target graph, initial features, and encoder from /home/kli16/NSUBS/model/OurSGM/save/imsm-dblp_unlabeled_dense_64/target.pickle
Traceback (most recent call last):
  File "/home/kli16/NSUBS/model/OurSGM/main.py", line 446, in <module>
    main()
  File "/home/kli16/NSUBS/model/OurSGM/main.py", line 405, in main
    model = _create_model(get_d_in_raw())
  File "/home/kli16/NSUBS/model/OurSGM/main.py", line 389, in get_d_in_raw
    gp = next(dl)
  File "/home/kli16/NSUBS/model/OurSGM/data_loader.py", line 114, in data_loader_wrapper
    for gp in data_loader:
  File "/home/kli16/NSUBS/model/OurSGM/data_loader.py", line 254, in get_data_loader_imsm
    gp, gq, gt_filtered = _gen_load_CS_gp_filter(load_path, gq, gt, true_nn_map, ppn, enc)
  File "/home/kli16/NSUBS/model/OurSGM/data_loader.py", line 269, in _gen_load_CS_gp_filter
    CS, daf_path_weights = get_CS_wrapper(gq, gt, load_path=ppn)
  File "/home/kli16/NSUBS/model/OurSGM/data_loader.py", line 50, in get_CS_wrapper
    CS, daf_path_weights = preproc_graph_pair(gq, gt)
  File "/home/kli16/NSUBS/model/OurSGM/daf.py", line 15, in preproc_graph_pair
    CS_u2v, node_ordering = get_CS(gq.path, gt.path, gq.number_of_nodes(), gt.number_of_nodes(), timer=timer)
  File "/home/kli16/NSUBS/model/OurSGM/daf.py", line 32, in get_CS
    'fix this if later we allow gq to be data graph'
AssertionError: fix this if later we allow gq to be data graph

Total time: 4.203 secs
/home/kli16/NSUBS/model/OurSGM/logs/our_test_imsm-dblp_unlabeled_dense_64_nn_300_2023-10-09T19-16-00.351972
our_test_imsm-dblp_unlabeled_dense_64_nn_300_2023-10-09T19-16-00.351972
